<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	
	<bean id="quartzJobFactory" class="com.app.quartz.AutowiringSpringBeanJobFactory">
			<!-- I will not explain this setting, just use it as shown: -->
			<property name="ignoredUnknownProperties" value="applicationContext" />
	</bean>
	
	<!-- Start Scheduling -->
	<bean id="scheduler" name="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		scope="singleton">
		<!-- <property name="configLocation" value="classpath:quartz.properties"/> -->
		<property name="dataSource">
			<ref bean="datasource" />
		</property>
		<property name="transactionManager">
			<ref bean="dataSourceTxManager" />
		</property>
		<property name="autoStartup" value="true" />
		<property name="overwriteExistingJobs" value="true" />
		<!-- reference to our 'autowiring job factory bean', defined above: -->
		<property name="jobFactory" ref="quartzJobFactory"/>
		<property name="applicationContextSchedulerContextKey" value="applicationContext"/>
		
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				<prop key="org.quartz.scheduler.instanceName">RivalAppClusterScheduler</prop>
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">
					org.quartz.impl.jdbcjobstore.StdJDBCDelegate
				</prop>
				<prop key="org.quartz.jobStore.dataSource">rivalDS</prop>
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
				<prop key="org.quartz.jobStore.isClustered">true</prop>
				<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
				<prop key="org.quartz.threadPool.threadPriority">5</prop>
				<prop key="org.quartz.threadPool.threadCount">10</prop>
			</props>
		</property>
		
		
		<!-- <property name="triggers"> <list> <ref bean="trigger" /> </list> </property> -->
	</bean>
	
	


    <!-- I will not explain the next three properties, just use it as shown: -->
    
    

    <!-- Controls whether to wait for jobs completion on app shutdown, we use 'true' -->
    <!-- <property name="waitForJobsToCompleteOnShutdown" 
                   value="${scheduler.shutdown.wait-for-jobs-completion}"/> -->
	
	<!-- End Scheduling -->
</beans>
